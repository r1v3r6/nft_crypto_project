import asyncio
import logging
from aiogram import Bot, Dispatcher, types
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton, WebAppInfo
from aiogram.filters import Command

logging.basicConfig(level=logging.INFO)

API_TOKEN = "7946679475:AAH-r7EYEZ3eZrRldaD8Makf9r2Anm_mfck"

bot = Bot(token=API_TOKEN)
dp = Dispatcher()

@dp.message(Command("start"))
async def send_welcome(message: types.Message):
    print("–ü–æ–ª—É—á–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∞ /start")  # –û—Ç–ª–∞–¥–æ—á–Ω—ã–π 
    print(message)  # <== –¥–æ–±–∞–≤—å—Ç–µ —ç—Ç–æ
    keyboard = InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(
                    text="üé∞ –ò–≥—Ä–∞—Ç—å",
                    web_app=WebAppInfo(url="https://example.com")  # –∑–∞–º–µ–Ω–∏ –Ω–∞ —Å–≤–æ—é —Å—Å—ã–ª–∫—É
                )
            ]
        ]
    )
    await message.answer(
        "–ü—Ä–∏–≤–µ—Ç! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ NFT –ö–∞–∑–∏–Ω–æ üÉè\n\n–ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –∏–≥—Ä—É.",
        reply_markup=keyboard
    )

async def main():
    try:
        print("–ë–æ—Ç –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è...")
        await bot.delete_webhook(drop_pending_updates=True)
        await dp.start_polling(bot)
    except Exception as e:
        print(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}")


if __name__ == "__main__":
    asyncio.run(main())

